#Usd car Price Predication
import pandas as pd
#import statsmodels.formula.api as smf
import statsmodels.api as sm
#from sklearn import model_selection  
#from sklearn import linear_model
#from sklearn.linear_model import LinearRegression

df=pd.read_csv(r'C:\Users\13040\OneDrive\桌面\SBU\AMS325\HW\Final Project\CAR DETAILS FROM CAR DEKHO.csv')

#create dummy variables for the df
df=pd.get_dummies(df,prefix='', prefix_sep='',
                  columns=['fuel','seller_type','transmission','owner'])
#remove 1 dummy variable for each
df=df.drop(df.columns[[4,8,13,17]], axis=1)


###

#test case
brand="Toyota"
name="Corolla"

#perform filtration based on car brand
df_brand_filtered=df[df['name'].str.contains(brand)] 
#perform filtration based on car name
df_car_filtered=df_brand_filtered[df_brand_filtered['name'].str.contains(name)] 

#isolate predictor and response
X = df_car_filtered.drop(['name','selling_price'], axis=1)
y = df_car_filtered['selling_price']

#initial model
mod = sm.OLS(y,X).fit()
print(mod.summary())

#dir(mod)

pvalue=mod.pvalues

#backward elimination
while any(pvalue > 0.05): #this elimination stops when all p-value less than 0.05
    #get the index of the highest p-value variable
    index=0
    for i in pvalue:
        if i != max(pvalue):
            index+=1
        else:
            break
    #get highest p-value variable name
    remove = pvalue.index[index]
    #remove the highest p-value variable from regression
    X = X.drop([remove], axis=1)
    
    mod=sm.OLS(y,X).fit()
    pvalue=mod.pvalues
    
print(mod.summary())

mod.predict()






